"""Initial schema with separated Steam data

Revision ID: 652cab81527a
Revises: 
Create Date: 2025-09-14 13:17:30.233879

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '652cab81527a'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('games',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('steam_app_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('price', sa.Float(), nullable=True),
    sa.Column('genres', sa.JSON(), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('image_url', sa.String(), nullable=True),
    sa.Column('header_image_url', sa.String(), nullable=True),
    sa.Column('release_date', sa.String(), nullable=True),
    sa.Column('metacritic_score', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_games_id'), 'games', ['id'], unique=False)
    op.create_index(op.f('ix_games_steam_app_id'), 'games', ['steam_app_id'], unique=True)
    op.create_table('import_status',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('operation_type', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('progress_current', sa.Integer(), nullable=True),
    sa.Column('progress_total', sa.Integer(), nullable=True),
    sa.Column('error_message', sa.String(), nullable=True),
    sa.Column('started_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_import_status_id'), 'import_status', ['id'], unique=False)
    op.create_index(op.f('ix_import_status_user_id'), 'import_status', ['user_id'], unique=False)
    op.create_table('steam_games',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('steam_app_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('image_url', sa.String(), nullable=True),
    sa.Column('price', sa.Float(), nullable=True),
    sa.Column('genres', sa.JSON(), nullable=True),
    sa.Column('categories', sa.JSON(), nullable=True),
    sa.Column('is_free', sa.Boolean(), nullable=True),
    sa.Column('release_date', sa.String(), nullable=True),
    sa.Column('developer', sa.String(), nullable=True),
    sa.Column('publisher', sa.String(), nullable=True),
    sa.Column('screenshots', sa.JSON(), nullable=True),
    sa.Column('steam_type', sa.String(), nullable=True),
    sa.Column('steam_rating_percent', sa.Integer(), nullable=True),
    sa.Column('steam_review_summary', sa.String(length=50), nullable=True),
    sa.Column('steam_review_count', sa.Integer(), nullable=True),
    sa.Column('last_updated', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_steam_games_id'), 'steam_games', ['id'], unique=False)
    op.create_index(op.f('ix_steam_games_steam_app_id'), 'steam_games', ['steam_app_id'], unique=True)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('steam_id', sa.String(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('avatar_url', sa.String(), nullable=True),
    sa.Column('shame_score', sa.Float(), nullable=True),
    sa.Column('settings', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_sync_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_steam_id'), 'users', ['steam_id'], unique=True)
    op.create_table('pile_entries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('steam_game_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('UNPLAYED', 'PLAYING', 'COMPLETED', 'ABANDONED', 'AMNESTY_GRANTED', name='gamestatus'), nullable=True),
    sa.Column('playtime_minutes', sa.Integer(), nullable=True),
    sa.Column('purchase_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('purchase_price', sa.Float(), nullable=True),
    sa.Column('completion_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('abandon_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('abandon_reason', sa.String(), nullable=True),
    sa.Column('amnesty_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('amnesty_reason', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['steam_game_id'], ['steam_games.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_pile_entries_id'), 'pile_entries', ['id'], unique=False)
    op.create_table('pile_snapshots',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('total_games', sa.Integer(), nullable=False),
    sa.Column('unplayed_games', sa.Integer(), nullable=False),
    sa.Column('total_value', sa.Float(), nullable=False),
    sa.Column('unplayed_value', sa.Float(), nullable=False),
    sa.Column('shame_score', sa.Float(), nullable=False),
    sa.Column('completion_years', sa.Float(), nullable=True),
    sa.Column('genre_breakdown', sa.JSON(), nullable=True),
    sa.Column('buying_patterns', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_pile_snapshots_id'), 'pile_snapshots', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_pile_snapshots_id'), table_name='pile_snapshots')
    op.drop_table('pile_snapshots')
    op.drop_index(op.f('ix_pile_entries_id'), table_name='pile_entries')
    op.drop_table('pile_entries')
    op.drop_index(op.f('ix_users_steam_id'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_steam_games_steam_app_id'), table_name='steam_games')
    op.drop_index(op.f('ix_steam_games_id'), table_name='steam_games')
    op.drop_table('steam_games')
    op.drop_index(op.f('ix_import_status_user_id'), table_name='import_status')
    op.drop_index(op.f('ix_import_status_id'), table_name='import_status')
    op.drop_table('import_status')
    op.drop_index(op.f('ix_games_steam_app_id'), table_name='games')
    op.drop_index(op.f('ix_games_id'), table_name='games')
    op.drop_table('games')
    # ### end Alembic commands ###